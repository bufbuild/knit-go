// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: buf/knittest/relations.proto

package knittestconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	knittest "github.com/bufbuild/knit-go/internal/gen/buf/knittest"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion1_7_0

const (
	// RelationsServiceName is the fully-qualified name of the RelationsService service.
	RelationsServiceName = "buf.knittest.RelationsService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// RelationsServiceGetFooStyleProcedure is the fully-qualified name of the RelationsService's
	// GetFooStyle RPC.
	RelationsServiceGetFooStyleProcedure = "/buf.knittest.RelationsService/GetFooStyle"
	// RelationsServiceGetFooBalanceCentsProcedure is the fully-qualified name of the RelationsService's
	// GetFooBalanceCents RPC.
	RelationsServiceGetFooBalanceCentsProcedure = "/buf.knittest.RelationsService/GetFooBalanceCents"
	// RelationsServiceGetFooBarsProcedure is the fully-qualified name of the RelationsService's
	// GetFooBars RPC.
	RelationsServiceGetFooBarsProcedure = "/buf.knittest.RelationsService/GetFooBars"
	// RelationsServiceGetFooDescriptionProcedure is the fully-qualified name of the RelationsService's
	// GetFooDescription RPC.
	RelationsServiceGetFooDescriptionProcedure = "/buf.knittest.RelationsService/GetFooDescription"
	// RelationsServiceGetBarBazProcedure is the fully-qualified name of the RelationsService's
	// GetBarBaz RPC.
	RelationsServiceGetBarBazProcedure = "/buf.knittest.RelationsService/GetBarBaz"
	// RelationsServiceGetBarBedazzlesProcedure is the fully-qualified name of the RelationsService's
	// GetBarBedazzles RPC.
	RelationsServiceGetBarBedazzlesProcedure = "/buf.knittest.RelationsService/GetBarBedazzles"
	// RelationsServiceGetFizzBuzzesProcedure is the fully-qualified name of the RelationsService's
	// GetFizzBuzzes RPC.
	RelationsServiceGetFizzBuzzesProcedure = "/buf.knittest.RelationsService/GetFizzBuzzes"
)

// RelationsServiceClient is a client for the buf.knittest.RelationsService service.
type RelationsServiceClient interface {
	GetFooStyle(context.Context, *connect_go.Request[knittest.GetFooStyleRequest]) (*connect_go.Response[knittest.GetFooStyleResponse], error)
	GetFooBalanceCents(context.Context, *connect_go.Request[knittest.GetFooBalanceCentsRequest]) (*connect_go.Response[knittest.GetFooBalanceCentsResponse], error)
	GetFooBars(context.Context, *connect_go.Request[knittest.GetFooBarsRequest]) (*connect_go.Response[knittest.GetFooBarsResponse], error)
	GetFooDescription(context.Context, *connect_go.Request[knittest.GetFooDescriptionRequest]) (*connect_go.Response[knittest.GetFooDescriptionResponse], error)
	GetBarBaz(context.Context, *connect_go.Request[knittest.GetBarBazRequest]) (*connect_go.Response[knittest.GetBarBazResponse], error)
	GetBarBedazzles(context.Context, *connect_go.Request[knittest.GetBarBedazzlesRequest]) (*connect_go.Response[knittest.GetBarBedazzlesResponse], error)
	GetFizzBuzzes(context.Context, *connect_go.Request[knittest.GetFizzBuzzesRequest]) (*connect_go.Response[knittest.GetFizzBuzzesResponse], error)
}

// NewRelationsServiceClient constructs a client for the buf.knittest.RelationsService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewRelationsServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) RelationsServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &relationsServiceClient{
		getFooStyle: connect_go.NewClient[knittest.GetFooStyleRequest, knittest.GetFooStyleResponse](
			httpClient,
			baseURL+RelationsServiceGetFooStyleProcedure,
			connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
			connect_go.WithClientOptions(opts...),
		),
		getFooBalanceCents: connect_go.NewClient[knittest.GetFooBalanceCentsRequest, knittest.GetFooBalanceCentsResponse](
			httpClient,
			baseURL+RelationsServiceGetFooBalanceCentsProcedure,
			connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
			connect_go.WithClientOptions(opts...),
		),
		getFooBars: connect_go.NewClient[knittest.GetFooBarsRequest, knittest.GetFooBarsResponse](
			httpClient,
			baseURL+RelationsServiceGetFooBarsProcedure,
			connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
			connect_go.WithClientOptions(opts...),
		),
		getFooDescription: connect_go.NewClient[knittest.GetFooDescriptionRequest, knittest.GetFooDescriptionResponse](
			httpClient,
			baseURL+RelationsServiceGetFooDescriptionProcedure,
			connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
			connect_go.WithClientOptions(opts...),
		),
		getBarBaz: connect_go.NewClient[knittest.GetBarBazRequest, knittest.GetBarBazResponse](
			httpClient,
			baseURL+RelationsServiceGetBarBazProcedure,
			connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
			connect_go.WithClientOptions(opts...),
		),
		getBarBedazzles: connect_go.NewClient[knittest.GetBarBedazzlesRequest, knittest.GetBarBedazzlesResponse](
			httpClient,
			baseURL+RelationsServiceGetBarBedazzlesProcedure,
			connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
			connect_go.WithClientOptions(opts...),
		),
		getFizzBuzzes: connect_go.NewClient[knittest.GetFizzBuzzesRequest, knittest.GetFizzBuzzesResponse](
			httpClient,
			baseURL+RelationsServiceGetFizzBuzzesProcedure,
			connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
			connect_go.WithClientOptions(opts...),
		),
	}
}

// relationsServiceClient implements RelationsServiceClient.
type relationsServiceClient struct {
	getFooStyle        *connect_go.Client[knittest.GetFooStyleRequest, knittest.GetFooStyleResponse]
	getFooBalanceCents *connect_go.Client[knittest.GetFooBalanceCentsRequest, knittest.GetFooBalanceCentsResponse]
	getFooBars         *connect_go.Client[knittest.GetFooBarsRequest, knittest.GetFooBarsResponse]
	getFooDescription  *connect_go.Client[knittest.GetFooDescriptionRequest, knittest.GetFooDescriptionResponse]
	getBarBaz          *connect_go.Client[knittest.GetBarBazRequest, knittest.GetBarBazResponse]
	getBarBedazzles    *connect_go.Client[knittest.GetBarBedazzlesRequest, knittest.GetBarBedazzlesResponse]
	getFizzBuzzes      *connect_go.Client[knittest.GetFizzBuzzesRequest, knittest.GetFizzBuzzesResponse]
}

// GetFooStyle calls buf.knittest.RelationsService.GetFooStyle.
func (c *relationsServiceClient) GetFooStyle(ctx context.Context, req *connect_go.Request[knittest.GetFooStyleRequest]) (*connect_go.Response[knittest.GetFooStyleResponse], error) {
	return c.getFooStyle.CallUnary(ctx, req)
}

// GetFooBalanceCents calls buf.knittest.RelationsService.GetFooBalanceCents.
func (c *relationsServiceClient) GetFooBalanceCents(ctx context.Context, req *connect_go.Request[knittest.GetFooBalanceCentsRequest]) (*connect_go.Response[knittest.GetFooBalanceCentsResponse], error) {
	return c.getFooBalanceCents.CallUnary(ctx, req)
}

// GetFooBars calls buf.knittest.RelationsService.GetFooBars.
func (c *relationsServiceClient) GetFooBars(ctx context.Context, req *connect_go.Request[knittest.GetFooBarsRequest]) (*connect_go.Response[knittest.GetFooBarsResponse], error) {
	return c.getFooBars.CallUnary(ctx, req)
}

// GetFooDescription calls buf.knittest.RelationsService.GetFooDescription.
func (c *relationsServiceClient) GetFooDescription(ctx context.Context, req *connect_go.Request[knittest.GetFooDescriptionRequest]) (*connect_go.Response[knittest.GetFooDescriptionResponse], error) {
	return c.getFooDescription.CallUnary(ctx, req)
}

// GetBarBaz calls buf.knittest.RelationsService.GetBarBaz.
func (c *relationsServiceClient) GetBarBaz(ctx context.Context, req *connect_go.Request[knittest.GetBarBazRequest]) (*connect_go.Response[knittest.GetBarBazResponse], error) {
	return c.getBarBaz.CallUnary(ctx, req)
}

// GetBarBedazzles calls buf.knittest.RelationsService.GetBarBedazzles.
func (c *relationsServiceClient) GetBarBedazzles(ctx context.Context, req *connect_go.Request[knittest.GetBarBedazzlesRequest]) (*connect_go.Response[knittest.GetBarBedazzlesResponse], error) {
	return c.getBarBedazzles.CallUnary(ctx, req)
}

// GetFizzBuzzes calls buf.knittest.RelationsService.GetFizzBuzzes.
func (c *relationsServiceClient) GetFizzBuzzes(ctx context.Context, req *connect_go.Request[knittest.GetFizzBuzzesRequest]) (*connect_go.Response[knittest.GetFizzBuzzesResponse], error) {
	return c.getFizzBuzzes.CallUnary(ctx, req)
}

// RelationsServiceHandler is an implementation of the buf.knittest.RelationsService service.
type RelationsServiceHandler interface {
	GetFooStyle(context.Context, *connect_go.Request[knittest.GetFooStyleRequest]) (*connect_go.Response[knittest.GetFooStyleResponse], error)
	GetFooBalanceCents(context.Context, *connect_go.Request[knittest.GetFooBalanceCentsRequest]) (*connect_go.Response[knittest.GetFooBalanceCentsResponse], error)
	GetFooBars(context.Context, *connect_go.Request[knittest.GetFooBarsRequest]) (*connect_go.Response[knittest.GetFooBarsResponse], error)
	GetFooDescription(context.Context, *connect_go.Request[knittest.GetFooDescriptionRequest]) (*connect_go.Response[knittest.GetFooDescriptionResponse], error)
	GetBarBaz(context.Context, *connect_go.Request[knittest.GetBarBazRequest]) (*connect_go.Response[knittest.GetBarBazResponse], error)
	GetBarBedazzles(context.Context, *connect_go.Request[knittest.GetBarBedazzlesRequest]) (*connect_go.Response[knittest.GetBarBedazzlesResponse], error)
	GetFizzBuzzes(context.Context, *connect_go.Request[knittest.GetFizzBuzzesRequest]) (*connect_go.Response[knittest.GetFizzBuzzesResponse], error)
}

// NewRelationsServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewRelationsServiceHandler(svc RelationsServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle(RelationsServiceGetFooStyleProcedure, connect_go.NewUnaryHandler(
		RelationsServiceGetFooStyleProcedure,
		svc.GetFooStyle,
		connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
		connect_go.WithHandlerOptions(opts...),
	))
	mux.Handle(RelationsServiceGetFooBalanceCentsProcedure, connect_go.NewUnaryHandler(
		RelationsServiceGetFooBalanceCentsProcedure,
		svc.GetFooBalanceCents,
		connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
		connect_go.WithHandlerOptions(opts...),
	))
	mux.Handle(RelationsServiceGetFooBarsProcedure, connect_go.NewUnaryHandler(
		RelationsServiceGetFooBarsProcedure,
		svc.GetFooBars,
		connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
		connect_go.WithHandlerOptions(opts...),
	))
	mux.Handle(RelationsServiceGetFooDescriptionProcedure, connect_go.NewUnaryHandler(
		RelationsServiceGetFooDescriptionProcedure,
		svc.GetFooDescription,
		connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
		connect_go.WithHandlerOptions(opts...),
	))
	mux.Handle(RelationsServiceGetBarBazProcedure, connect_go.NewUnaryHandler(
		RelationsServiceGetBarBazProcedure,
		svc.GetBarBaz,
		connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
		connect_go.WithHandlerOptions(opts...),
	))
	mux.Handle(RelationsServiceGetBarBedazzlesProcedure, connect_go.NewUnaryHandler(
		RelationsServiceGetBarBedazzlesProcedure,
		svc.GetBarBedazzles,
		connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
		connect_go.WithHandlerOptions(opts...),
	))
	mux.Handle(RelationsServiceGetFizzBuzzesProcedure, connect_go.NewUnaryHandler(
		RelationsServiceGetFizzBuzzesProcedure,
		svc.GetFizzBuzzes,
		connect_go.WithIdempotency(connect_go.IdempotencyNoSideEffects),
		connect_go.WithHandlerOptions(opts...),
	))
	return "/buf.knittest.RelationsService/", mux
}

// UnimplementedRelationsServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedRelationsServiceHandler struct{}

func (UnimplementedRelationsServiceHandler) GetFooStyle(context.Context, *connect_go.Request[knittest.GetFooStyleRequest]) (*connect_go.Response[knittest.GetFooStyleResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.knittest.RelationsService.GetFooStyle is not implemented"))
}

func (UnimplementedRelationsServiceHandler) GetFooBalanceCents(context.Context, *connect_go.Request[knittest.GetFooBalanceCentsRequest]) (*connect_go.Response[knittest.GetFooBalanceCentsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.knittest.RelationsService.GetFooBalanceCents is not implemented"))
}

func (UnimplementedRelationsServiceHandler) GetFooBars(context.Context, *connect_go.Request[knittest.GetFooBarsRequest]) (*connect_go.Response[knittest.GetFooBarsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.knittest.RelationsService.GetFooBars is not implemented"))
}

func (UnimplementedRelationsServiceHandler) GetFooDescription(context.Context, *connect_go.Request[knittest.GetFooDescriptionRequest]) (*connect_go.Response[knittest.GetFooDescriptionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.knittest.RelationsService.GetFooDescription is not implemented"))
}

func (UnimplementedRelationsServiceHandler) GetBarBaz(context.Context, *connect_go.Request[knittest.GetBarBazRequest]) (*connect_go.Response[knittest.GetBarBazResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.knittest.RelationsService.GetBarBaz is not implemented"))
}

func (UnimplementedRelationsServiceHandler) GetBarBedazzles(context.Context, *connect_go.Request[knittest.GetBarBedazzlesRequest]) (*connect_go.Response[knittest.GetBarBedazzlesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.knittest.RelationsService.GetBarBedazzles is not implemented"))
}

func (UnimplementedRelationsServiceHandler) GetFizzBuzzes(context.Context, *connect_go.Request[knittest.GetFizzBuzzesRequest]) (*connect_go.Response[knittest.GetFizzBuzzesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.knittest.RelationsService.GetFizzBuzzes is not implemented"))
}
